openapi: 3.0.0
info:
  version: '1.0'
  title: MaPS Pensions Data
  description: |-
    This service allows a client to retrieve pensions data retrieved from the PDP Ecosystem for a pension owner session.
    To ensure that the most up to date data is available client should first make a find redirect request to the CDA at the start of the user session.
  termsOfService: 'https://maps.org.uk/en/about-us/terms-and-conditions#'
  contact:
    name: General Enquires
    url: 'https://maps.org.uk/en/about-us/contact-us'
    email: contact@maps.org.uk
  license:
    url: 'https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/'
    name: Government API License
servers:
  - url: 'http://localhost:3000'
    description: LocalTest
paths:
  /pensions-data:
    get:
      tags:
        - Pensions Data
      summary: Get Pensions Data
      description: Get the retrieved pensions data that contains the pensions information has been retrieved from the PDP Ecosystem for a pension owner session.
      operationId: get-retrieved-pensions-data-for-pension-owner-session
      parameters:
        - name: userSessionId
          in: header
          description: The unique id of pension owner session as issued by the requesting system
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/mhpdCorrelationId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PensionsData'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Data not found for pension owner session
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security: []
      servers:
        - url: 'http://localhost:3000'
          description: LocalTest
    post:
      tags:
        - Pensions Data
      summary: Initiate the retrieval of Pensions Data for a user session.
      description: Initiate collection of Pensions Data for a pension owner session.
      operationId: post-pensions-data-for-pension-owner-session
      parameters:
        - name: iss
          in: header
          description: The id of the requesting system issued by the CDA
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 200
        - name: userSessionId
          in: header
          description: The unique id of pension owner session as issued by the requesting system
          required: true
          schema:
            type: string
            minLength: 1
        - $ref: '#/components/parameters/mhpdCorrelationId'
      requestBody:
        $ref: '#/components/requestBodies/postPensionsDataRequest'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  predictedTotalDataRetrievalTime:
                    type: integer
                    description: The originally predicted Total time to retrieve the pensions data for a citizen user.
                    format: int32
                    minimum: 0
                    multipleOf: 1
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: There is already pensions data for the user session.
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security: []
      servers:
        - url: 'http://localhost:3000'
          description: LocalTest
tags:
  - name: Pensions Data
    description: Pensions Data Retrieval
components:
  parameters:
    mhpdCorrelationId:
      name: mhpdCorrelationId
      in: header
      description: Id to track the progress of a process throughout the the mhpd application
      required: false
      schema:
        type: string
        format: uuid
        pattern: '^(?:[0-9a-fA-F]){8}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){12}\}{0,1}$'
        minLength: 36
        maxLength: 36
  requestBodies:
    postPensionsDataRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              clientId:
                type: object
              clientSecret:
                type: object
              authorisationCode:
                type: object
              redirectUrl:
                type: object
              codeVerifier:
                type: object
  schemas:
    PensionsData:
      type: object
      title: PensionsData
      properties:
        pensionPolicies:
          type: array
          description: |-
            The retrieve pension details available for the Pension Owner.
            An empty array indicates that no data has yet been retrieved.
          items:
            $ref: '#/components/schemas/pensionPolicy'
        peiInformation:
          type: object
          additionalProperties: false
          properties:
            peiRetrievalComplete:
              type: boolean
              description: Indicator denoting if the peis represent the complete set of pei identified for the pension owner at a point in time.
            peiData:
              type: array
              description: The list of pei data retrieved for the cdaUserGuid and userSessionId. An empty array indicates that no PeIs have yet been retrieved.
              items:
                type: object
                properties:
                  pei:
                    type: string
                    description: "The PeI. \_\n\nThis must be two 36 character GUIDs separated by a colon.\n\nThe first GUID is a holder-name GUID which is a unique identifier for the base Url of a View API from which the details of the PeI pensions data can be retrieved.\n\nThe second GUID is a unique identifier for the pensions data as known by the resource holder."
                    pattern: '^(?:\{{0,1}(?:[0-9a-fA-F]){8}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){12}\}{0,1}:?:\{{0,1}(?:[0-9a-fA-F]){8}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){12}\}{0,1})$'
                    minLength: 73
                    maxLength: 73
                  description:
                    type: string
                    description: The human readable description of the title of the pension scheme that the asset is associated with
                    minLength: 1
                    maxLength: 150
                  retrievalStatus:
                    type: string
                    enum:
                      - NEW
                      - RETRIEVAL_REQUESTED
                      - RETRIEVAL_COMPLETE
                      - RETRIEVAL_FAILED
                    description: |-
                      The current status of the retrieval of the pension arrangement data associated identified by the PeI.
                      - `NEW` - retrieval of the associated pension data has not be requested - `RETRIEVAL_REQUESTED` - retrieval of the associated pension data has not be requested - `RETRIEVAL_COMPLETE` - the retrieval of the pension data for the has been completed. Albeit that the data may not all be available - `RETRIEVAL_FAILED` - the retrieval of the pension data failed and will not be retried until later.
                required:
                  - pei
                  - description
                  - retrievalStatus
          required:
            - peiRetrievalComplete
            - peiData
        pensionsDataRetrievalComplete:
          type: boolean
          description: Indicator denoting if the retrieval of pensions data is complete.
        retrievalProgressInformation:
          $ref: '#/components/schemas/retrievalProgressInformation'
          description: Information about the time to retrieve the pensions data
      required:
        - pensionPolicies
        - peiInformation
        - pensionsDataRetrievalComplete
    pensionPolicy:
      type: object
      title: pensionPolicy
      properties:
        pensionArrangements:
          type: array
          description: The pension arrangments related to the policy.
          minItems: 1
          items:
            $ref: '#/components/schemas/pensionArrangement'
      required:
        - pensionArrangements
    pensionArrangement:
      type: object
      title: pensionArrangement
      properties:
        externalPensionPolicyId:
          type: string
          description: "The unique id by which the policy that the arrangement is part of is identified in the PDP ecosystem.\_ All arrangements within a PensionPolicy must have the same externalPensionPolicyId"
          minLength: 1
          maxLength: 50
        externalAssetId:
          type: string
          description: "The unique id used to identify the asset when requesting the data from the Pension Data Providers.\_ Arrangements within a pension policy may have the same or different externalAssetIds but arrangements for different policies must never have the same externalAssetId."
          minLength: 1
          maxLength: 150
        matchType:
          type: string
          enum:
            - DEFN
            - POSS
            - CONT
            - NEW
            - SYS
          description: |
            Explanations:
             * `DEFN` - A definite match with no issues
             * `POSS` - A possible match has been found, the pension owner user should contact the scheme administrator using the provided details
             * `CONT` - A definite match but serious issue (e.g. fraud, significant errors) that need to be clarified.  The pension owner user should contact the scheme administrator using the provided details
             * `NEW` - A definitive match for a new pension, details will not available within 3 months of start.  If start date is provided the system may be able to determine when this should be
             * `SYS` - A temporary system error.  The pension data provider has reported that they have a temporary error.  The data may be available if the user tries later.
        schemeName:
          type: string
          description: Name of the pension provider/scheme
          maxLength: 150
        alternateSchemeNames:
          type: array
          description: Details of alternate names that a pension owner may recognise
          items:
            $ref: '#/components/schemas/alternateScheme'
        contactReference:
          type: string
          description: |
            The reference that should be used when contacting the administrator to assist in  identifying the matched arrangement. 
            This may or may not be the policy number.
            This reference should be used regardless of the match type.
          minLength: 1
          maxLength: 150
        pensionType:
          type: string
          enum:
            - AVC
            - CB
            - CDC
            - DB
            - DC
            - HYB
            - SP
          description: |
            Explanations:
              * `AVC` - additional voluntary conribution
              * `CB` - cash balance
              * `CDC` - collective defined contribution
              * `DB` - defined benefit
              * 'DC' - defined contribution
              * `HYB` - Hybrid - may have complexities in benefits including multiple calcualtions types
              * `SP` - state pension
        pensionOrigin:
          type: string
          enum:
            - A
            - PC
            - PM
            - PT
            - WC
            - WM
            - WT
          description: "Won't be available if match type is possible or the arrangement is a state pension\n\n- `A`\tdeferred annuity \n- `PC`\tpension provider  - pension credit user \n- `PM`\tpension provider– active or deferred user \n- `PT`\tpension provider – deferred transfer in user  \n- `WC`\tscheme - pension credit user \n- `WM`\tscheme – active or deferred user \n- `WT`\tscheme – deferred transfer in user\n"
        pensionStatus:
          type: string
          enum:
            - A
            - I
            - IPPF
            - IWU
          description: "Won't be available if match type is possible or the arrangement is a state pension\n- `A`\tactive\n- `I`\tinactive\n- `IPPF`\tinactive and the scheme is subject to a Pensions Protection Fund (PPF) assessment period \n- `IWU` \tinactive and the pension provider/   scheme is winding up \n"
        startDate:
          type: string
          description: |-
            The start date of the individual’s membership
            in the pension arrangement
          format: date
        retirementDate:
          type: string
          description: |
            The retirement date that was used to calculate the user’s benefits.
            Won't be available if match type is possible or the arrangement is a state pension
          format: date
        dateOfBirth:
          type: string
          description: |-
            Date pf birth of the pension owner. Must be a valid date, not in the future (a valid month, a number of days that is valid for the month, inclusion of 29 February if a leap year).
            Won't be available if match type is possible or the arrangement is a state pension
          format: date
        statePensionMessageEng:
          type: string
          description: |
            State Pension Message in English
            Must be provided for state pension
            Must not be provided for any other pension type
          maxLength: 3000
        statePensionMessageWelsh:
          type: string
          description: |
            State Pension Message in Welsh
            Must be provided for state pension
            Must not be provided for any other pension type
          maxLength: 3000
        contributionsFromMultipleEmployers:
          type: boolean
          description: Indicates if multiple employers have contributed to the pension.
        pensionAdministrator:
          $ref: '#/components/schemas/pensionAdministrator'
          description: |-
            Details of the pension administrator.
            Currently these only contain the administrator name and how to contact them.
            A single set of pension administrator details must be provided for each arrangement.
        employmentMembershipPeriods:
          type: array
          description: |-
            A list detailing period of contributions toward the arrangement from employers.
            This data may or may not be provided, even if provided it should not beconsidered definitive.
          minItems: 1
          items:
            $ref: '#/components/schemas/employmentMembershipPeriod'
        benefitIllustrations:
          type: array
          description: |-
            Illustrations for benefits payable under the arrangement.
            An arrangement may have multiple illustrations where benefits of different types are payable and/or where benefits are payable on different dates.
          minItems: 1
          items:
            $ref: '#/components/schemas/benefitIllustration'
        additionalDataSources:
          type: array
          description: Links to web pages that contain additional information related to the pension arrangement
          items:
            $ref: '#/components/schemas/additionalDataSource'
      required:
        - externalAssetId
        - matchType
        - pensionAdministrator
    alternateScheme:
      type: object
      title: alternateScheme
      properties:
        name:
          type: string
          description: An alternate pension provider/scheme by which the pension may be known to the Pension Owner
          minLength: 1
          maxLength: 150
        alternateNameType:
          type: string
          enum:
            - FOR
            - OTH
          description: |
            The explaination for the alternative name
            Explanations:
             * `FOR` - This was the former name of the pension provider/scheme
             * `OTH` - This was the name of a different pension provider/scheme where most (or all) of the user benefits accrued before they were transferred into the pension/provider scheme.
      required:
        - name
        - alternateNameType
    pensionAdministrator:
      type: object
      title: pensionAdministrator
      properties:
        name:
          type: string
          description: The name of the organisation that administers the pension
          minLength: 1
          maxLength: 150
        contactMethods:
          type: array
          description: A list of the methods by which the administrator may be contacted by the pension owner or delegate.
          minItems: 1
          items:
            $ref: '#/components/schemas/contactMethod'
      required:
        - name
        - contactMethods
    contactMethod:
      type: object
      title: contactMethod
      properties:
        preferred:
          type: boolean
          description: Identifies if the asscocated contact method details are one of the preferred contact methods for the administrator in relatiion to this arrangement.
          default: false
        contactMethodDetails:
          type: object
          description: The details of an actual way by which the administrator may be contacted.
          oneOf:
            - $ref: '#/components/schemas/emailAddress'
            - $ref: '#/components/schemas/phoneNumber'
            - $ref: '#/components/schemas/postalAddress'
            - $ref: '#/components/schemas/website'
      required:
        - preferred
        - contactMethodDetails
    emailAddress:
      type: object
      title: emailAddress
      properties:
        email:
          type: string
          description: Valid email address
          format: email
          pattern: '^[a-zA-Z0-9.!#$%&''*+/=?^_`{|}~\-]+@([^.@][^@\s]+)$'
      required:
        - email
    phoneNumber:
      type: object
      title: phoneNumber
      properties:
        number:
          type: string
          description: The actual phone number including the international dialling code.
          pattern: '^\+(?:[0-9]?){1,3}\s(?:[0-9]?){3,14}[0-9]$'
          minLength: 10
          maxLength: 20
        usage:
          type: array
          description: "- `A`\tWhatsApp contact number\n- `M`\tmain\n- `N`\tnon-UK number\n- `S`\tSMS\n- `W`\tWelsh speaking\n"
          items:
            type: string
            enum:
              - A
              - M
              - 'N'
              - S
              - W
      required:
        - number
        - usage
    postalAddress:
      type: object
      title: postalAddress
      description: |-
        The data provided in the postal address must comply to a valid postal address for the country of the address.
        The postal address must equate to a valid postal address for the address country if the data (where provided) is ordered as follows:
        - postalName
        - line1
        - line2
        - line3
        - line4
        - line5
        - postcode
        - countryCode
      properties:
        postalName:
          type: string
          description: The addressee to be used in the postal address
          minLength: 1
          maxLength: 100
        line1:
          type: string
          description: The initial line of the address
          minLength: 1
          maxLength: 70
        line2:
          type: string
          description: Only use if line 1 is populated
          minLength: 1
          maxLength: 70
        line3:
          type: string
          description: Only use if line 2 is populated
          minLength: 1
          maxLength: 70
        line4:
          type: string
          description: Only use if line 3 is populated
          minLength: 1
          maxLength: 70
        line5:
          type: string
          description: Only use if line 4 is populated
          minLength: 1
          maxLength: 70
        postcode:
          type: string
          description: Postcode/zipcode
          minLength: 1
          maxLength: 16
        countryCode:
          type: string
          description: |-
            The country code of address given by the administrator.
            As a 2-letter ISO 3166-1 alpha-2 code.
          minLength: 2
          maxLength: 2
      required:
        - postalName
        - line1
        - countryCode
    website:
      type: object
      title: website
      properties:
        url:
          type: string
          description: The URL to allow the user access to pensions administrator website to get information on the arrangement
          format: uri
          minLength: 5
          maxLength: 300
      required:
        - url
    employmentMembershipPeriod:
      type: object
      title: employmentMembershipPeriod
      description: Details of periods of contributions toward the arrangement from employers.
      properties:
        employerName:
          type: string
          description: The employer name
          minLength: 1
          maxLength: 100
        employerStatus:
          type: string
          enum:
            - C
            - H
          description: "- `C`\tcurrent employer\n- `H`\thistoric employer \n"
        membershipStartDate:
          type: string
          description: The start date of the pension owners membership period under the employer.
          format: date
        membershipEndDate:
          type: string
          description: The end date of the pension owners membership period under the employer.
          format: date
    benefitIllustration:
      type: object
      title: benefitIllustration
      description: Details of an illustrations related to a particular benefit payable at a particular time under the arrangement.
      properties:
        illustrationComponents:
          type: array
          description: |-
            The components of the illustration
            There must be at least one component in and illustration.
          minItems: 1
          items:
            $ref: '#/components/schemas/benefitIllustrationComponent'
        illustrationDate:
          type: string
          description: 'The ‘as at’ date the values were calculated, shows how current the values are.'
          format: date
    benefitIllustrationComponent:
      type: object
      title: benefitIllustrationComponent
      description: An illustration for to a particular benefit payable at a particular time under the arrangement.
      properties:
        illustrationType:
          type: string
          enum:
            - ERI
            - AP
          description: |-
            The type of the illustration.
            - `ERI` ERI Illustration
            - `AP` Accrued Pension Illustration
        unavailableReason:
          type: string
          enum:
            - ANO
            - DB
            - DBC
            - DCC
            - DCHA
            - DCHP
            - DCSM
            - MEM
            - NEW
            - PPF
            - TRN
            - WU
            - NET
          description: "Provided if some of the illustration data is not available.\n\nValues can idicate that the data will never be available, that the data may become available at an undefined date in the future or that the data should be available within a prescribed time period\n\n- `ANO` \tbenefits cannot currently be provided as information is required from a third party (for example, a final leaving salary from the employer for a DB benefit)\n- `DB` \tDB or cash balance benefit ERI not required to be provided (deferred member ) and will not be providing it  \n- `DBC`\tDB or cash balance benefit being calculated and will be available within 10 working days  (from the day after the day the PeI is registered as a match)\n- `DCC` \tDC benefit is benefit being calculated and will be available within 3 working days (from the day after the day the PeI is registered as a match)\n- `DCHA`\tDC/Hybrid benefit: the value of the pot is less than £5,000, no contributions are being made to the pension provider/scheme and they have notified the user they will not be providing any further Statutory Money Purchase Illustrations (SMPIs) until contributions restart\n- `DCHP`\tDC/Hybrid benefit and the user is within 2 years of their retirement date or older\n- `DCSM`\tDC benefit and no requirement to provide SMPI and not providing one. \n- `MEM`\tbenefits cannot currently be provided because there is an action or decision outstanding from the user \n- `NEW` \tuser is a new member user of the pension provider/scheme and ERI value data is not yet available\n- `NET` user is a new member user of the pension provider/schemes as a result of a transfer in and accrued pension information is not yet available\n- `PPF` the scheme is subject to a PPF assessment period and the user should contact the scheme administrator\n- `TRN`\ttransaction outstanding that affects the value\n- `WU`\tthe pension provider/scheme is in the process of winding up and the user should contact the administrator\n"
        benefitType:
          type: string
          enum:
            - AVC
            - CBL
            - CBS
            - CDI
            - CDL
            - DB
            - DBL
            - DC
            - SP
          description: "The type of benefit that the illustration is for.\n\n- `AVC`\tadditional voluntary contribution\n- `CBL`\tcash balance benefit expressed as a lump sum\n- `CBS`\tcash balance benefit\n- `CDI`\tcollective DC benefits expressed as regular income\n- `CDL`\tcollective DC benefits expressed as a lump sum\n- `DB`\tdefined benefit\n- `DBL`\tdefined benefit separately accrued lump sum (NOT commutation)\n- `DC`\tdefined contribution\n"
        calculationMethod:
          type: string
          enum:
            - BS
            - CBI
            - SMPI
          description: "The method used to calculate the illustration.\n\n- `BS`\tbenefit-specific method based on pension provider/scheme rules\n- `CBI`\tcash balance illustration methodology from ASTM1 for calculating income fund only and/or benefit-specific method based on pension provider/scheme rules for calculating fund value\n- `SMPI`\tstatutory money purchase illustration methodology from ASTM1 \n"
        payableDetails:
          $ref: '#/components/schemas/payableDetails'
          description: |
            Details of the amount payable or the reason that the amount will not be provided.
            Must be provided unless an unavailableReason has been provided. 
        dcPot:
          type: number
          description: The estimated retirement pot used to calculate the benefit
          format: float
          multipleOf: 0.01
        survivorBenefit:
          type: boolean
          description: An indicator that the benefit value shown also has survivors’ benefits
        safeguardedBenefit:
          type: boolean
          description: An indicator that the benefit value shown also has safeguarded benefits
        illustratonWarnings:
          type: array
          description: |-
            Warnings may be provided to explain important additional information to the user which will affect the value of the benefit or the value show
            Warnings may be temporary or permanent.
            There is no guarantee that all relevant warnings will be provided.
          minItems: 1
          maxItems: 4
          items:
            type: string
            enum:
              - AVC
              - CUR
              - DEF
              - FAS
              - PEO
              - PNR
              - PSO
              - SPA
              - TVI
              - INP
      required:
        - illustrationType
        - benefitType
    payableDetails:
      title: payableDetails
      oneOf:
        - $ref: '#/components/schemas/recurringIncomeDetails'
          description: |
            Details of a calculated recurring income
        - $ref: '#/components/schemas/lumpSumDetails'
          description: Details of a calculated one off lump sum payment
        - $ref: '#/components/schemas/amountNotProvidedDetails'
          description: Details of why payments detials have not been provided
    recurringIncomeDetails:
      type: object
      title: recurringIncomeDetails
      properties:
        amountType:
          type: string
          enum:
            - INC
            - INCL
            - INCN
          description: "he type of the amount and additional detail of how it has been calculated.\n- `INC`\trecurring income \n- `INCL`\trecurring income alternative calculated using the LEGACY pension provider/scheme basis \n- `INCN`\trecurring income alternative calculated using the NEW pension provider/scheme basis\n"
        annualAmount:
          type: number
          description: 'The annual amount payable, in GBP,  this will represent an amount paid annually for the payable term of the benefit.'
          format: float
          multipleOf: 0.01
        monthlyAmount:
          type: number
          description: 'The monthly amount payable, in GBP,  this will represent an amount paid monthly for the payable term of the benefit.'
          format: float
          multipleOf: 0.01
        lastPaymentDate:
          type: string
          description: The last payment date of the benefit.  Not provided if the benefit is payable for life.
          format: date
        payableDate:
          type: string
          description: "The date that the benefit first becomes payable.\_ This may not be Pension Owner's retirement date."
          format: date
        increasing:
          type: boolean
      required:
        - amountType
        - annualAmount
        - payableDate
    lumpSumDetails:
      type: object
      title: lumpSumDetails
      properties:
        amountType:
          type: string
          enum:
            - CSH
            - CSHL
            - CSHN
          description: "The type of the amount and additional detail of how it has been calculated.\n- `CSH`\ta separately accrued lump sum \n- `CSHL`\ta separately accrued lump sum alternative calculated using the LEGACY pension provider/scheme basis\n- `CSHN`\ta separately accrued lump sum alternative calculated using the NEW pension provider/scheme basis \n"
        amount:
          type: number
          description: 'The lump sum, in GBP,  this will represent a one off lump sum to be paid on the illustration payable date.'
          format: float
          multipleOf: 0.01
        payableDate:
          type: string
          description: "The date that the benefit becomes payable.\_ This may not be Pension Owner's retirement date."
          format: date
      required:
        - amountType
        - amount
        - payableDate
    amountNotProvidedDetails:
      type: object
      title: amountNotProvidedDetails
      properties:
        reason:
          description: |
            The reason that an illustration amount has not been provided
            - `SML` The illustration amount equates to less than £120pa
        payableDate:
          type: string
          description: "The date that the benefit becomes payable.\_ This may not be Pension Owner's retirement date."
          format: date
        lastPaymentDate:
          type: string
          description: The last date that the benefit is payable.
          format: date
      required:
        - reason
        - payableDate
    additionalDataSource:
      type: object
      title: additionalDataSource
      properties:
        url:
          type: string
          format: uri
        informationType:
          type: string
          enum:
            - C_AND_C
            - SIP
            - IMP
            - ANR
            - SP
          description: |-
            The type of information provided at the website.
            - `C_AND_C` information on costs and charges relating to a DC pension
            - `SIP` the statement of investment principles
            - `IMP` the implementation statement
            - `ANR` the annual report of the independent governance
            - `SP` additional state pension information
    retrievalProgressInformation:
      type: object
      title: retrievalProgressInformation
      description: Data detailing the originally expected time to retrieve the pensions data for a user session and current expected remaingin time
      properties:
        predictedTotalDataRetrievalTime:
          type: integer
          description: The originally predicted Total time to retrieve the pensions data for a citizen user.
          format: int32
          minimum: 0
          multipleOf: 1
        predictedRemainingDataRetrievalTime:
          type: integer
          description: The current predicted remaining time to retrieve the pensions data for a citizen user.
          format: int32
          minimum: 0
      required:
        - predictedTotalDataRetrievalTime
        - predictedRemainingDataRetrievalTime