{
    "openapi": "3.0.1",
    "info": {
        "title": "cda-integration-external",
        "description": "This API describes service that provides RQP tokens for clients interacting with CDA components.",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://maps-api-management-dev.azure-api.net/cda-integration-external"
        }
    ],
    "paths": {
        "/token": {
            "post": {
                "tags": [
                    "CdaToken"
                ],
                "summary": "/token - POST",
                "operationId": "post-token",
                "parameters": [
                    {
                        "name": "X-Request-ID",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "grant_type": {
                                        "type": "string"
                                    },
                                    "ticket": {
                                        "type": "string"
                                    },
                                    "claim_token": {
                                        "type": "string"
                                    },
                                    "claim_token_format": {
                                        "enum": [
                                            "pension_dashboard_rqp"
                                        ],
                                        "type": "string",
                                        "description": " (Constant value: pension_dashboard_rqp)"
                                    },
                                    "scope": {
                                        "enum": [
                                            "owner"
                                        ],
                                        "type": "string",
                                        "description": " (Constant value: owner)"
                                    },
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "redirect_uri": {
                                        "type": "string"
                                    },
                                    "code_verifier": {
                                        "type": "string"
                                    },
                                    "pct": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/claims_gathering": {
            "get": {
                "tags": [
                    "ClaimsGathering"
                ],
                "summary": "/claims_gathering - GET",
                "operationId": "get-claims_gathering",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "ticket",
                        "in": "query",
                        "schema": {
                            "pattern": "^[A-Za-z0-9\\-_]+(\\.[A-Za-z0-9\\-_]+){4}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "claims_redirect_uri",
                        "in": "query",
                        "schema": {
                            "pattern": "^https?:\\/\\/([a-zA-Z0-9\\-]+\\.)+[a-zA-Z]{2,}(:\\d{1,5})?(\\/[^\\s]*)?$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "rqp_token",
                        "in": "query",
                        "schema": {
                            "pattern": "^[A-Za-z0-9\\-_]+(\\.[A-Za-z0-9\\-_]+){2}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "request_id",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": " (Constant value: FIND)",
                        "schema": {
                            "enum": [
                                "FIND"
                            ],
                            "type": "string",
                            "description": " (Constant value: FIND)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/holdername-view-configurations": {
            "get": {
                "tags": [
                    "HolderName"
                ],
                "summary": "/holdername-view-configurations?holdernameGuid={holdernameGuid} - GET",
                "operationId": "get-holdername-view-configurations-holdernameguid-holdernameguid",
                "parameters": [
                    {
                        "name": "holdernameGuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-Request-ID",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/jwk_uri": {
            "get": {
                "tags": [
                    "JwkUri"
                ],
                "summary": "/jwk_uri - GET",
                "operationId": "get-jwk_uri",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/peis/{peis_id}": {
            "get": {
                "tags": [
                    "Peis"
                ],
                "summary": "/peis/{peis_id} - GET",
                "operationId": "get-peis-peis_id",
                "parameters": [
                    {
                        "name": "peis_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-Request-ID",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/scenarios/{scenarioCode}": {
            "get": {
                "tags": [
                    "Scenario"
                ],
                "summary": "/scenarios/{scenarioCode} - GET",
                "operationId": "get-scenarios-scenariocode",
                "parameters": [
                    {
                        "name": "scenarioCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/scenarios": {
            "get": {
                "tags": [
                    "Scenario"
                ],
                "summary": "/scenarios - GET",
                "operationId": "get-scenarios",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Scenario"
                ],
                "summary": "/scenarios - POST",
                "operationId": "post-scenarios",
                "parameters": [
                    {
                        "name": "scenarioCode",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        },
                        "text/json": {
                            "schema": {}
                        },
                        "application/*+json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Scenario"
                ],
                "summary": "/scenarios - DELETE",
                "operationId": "delete-scenarios",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "example": [
                                "string"
                            ]
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "example": [
                                "string"
                            ]
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "example": [
                                "string"
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/scenarios/validate": {
            "post": {
                "tags": [
                    "Scenario"
                ],
                "summary": "/scenarios/validate - POST",
                "operationId": "post-scenarios-validate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        },
                        "text/json": {
                            "schema": {}
                        },
                        "application/*+json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}
